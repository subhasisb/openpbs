#ifndef PBS_IFL_BUILDER_H
#define PBS_IFL_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef PBS_IFL_READER_H
#include "pbs_ifl_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

#define __PBS_ifl_ProtType_formal_args , PBS_ifl_ProtType_enum_t v0
#define __PBS_ifl_ProtType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, PBS_ifl_ProtType, PBS_ifl_ProtType_enum_t)
#define __PBS_ifl_batch_op_formal_args , PBS_ifl_batch_op_enum_t v0
#define __PBS_ifl_batch_op_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, PBS_ifl_batch_op, PBS_ifl_batch_op_enum_t)

typedef flatbuffers_union_ref_t PBS_ifl_ReqBody_union_ref_t;
typedef flatbuffers_union_vec_ref_t PBS_ifl_ReqBody_union_vec_ref_t;
static PBS_ifl_ReqBody_union_ref_t PBS_ifl_ReqBody_clone(flatbuffers_builder_t *B, PBS_ifl_ReqBody_union_t t);

static const flatbuffers_voffset_t __PBS_ifl_Header_required[] = { 0 };
typedef flatbuffers_ref_t PBS_ifl_Header_ref_t;
static PBS_ifl_Header_ref_t PBS_ifl_Header_clone(flatbuffers_builder_t *B, PBS_ifl_Header_table_t t);
__flatbuffers_build_table(flatbuffers_, PBS_ifl_Header, 3)

static const flatbuffers_voffset_t __PBS_ifl_Attribute_required[] = { 0 };
typedef flatbuffers_ref_t PBS_ifl_Attribute_ref_t;
static PBS_ifl_Attribute_ref_t PBS_ifl_Attribute_clone(flatbuffers_builder_t *B, PBS_ifl_Attribute_table_t t);
__flatbuffers_build_table(flatbuffers_, PBS_ifl_Attribute, 4)

static const flatbuffers_voffset_t __PBS_ifl_Extend_required[] = { 0 };
typedef flatbuffers_ref_t PBS_ifl_Extend_ref_t;
static PBS_ifl_Extend_ref_t PBS_ifl_Extend_clone(flatbuffers_builder_t *B, PBS_ifl_Extend_table_t t);
__flatbuffers_build_table(flatbuffers_, PBS_ifl_Extend, 1)

static const flatbuffers_voffset_t __PBS_ifl_Qjob_required[] = { 0 };
typedef flatbuffers_ref_t PBS_ifl_Qjob_ref_t;
static PBS_ifl_Qjob_ref_t PBS_ifl_Qjob_clone(flatbuffers_builder_t *B, PBS_ifl_Qjob_table_t t);
__flatbuffers_build_table(flatbuffers_, PBS_ifl_Qjob, 3)

static const flatbuffers_voffset_t __PBS_ifl_Req_required[] = { 0 };
typedef flatbuffers_ref_t PBS_ifl_Req_ref_t;
static PBS_ifl_Req_ref_t PBS_ifl_Req_clone(flatbuffers_builder_t *B, PBS_ifl_Req_table_t t);
__flatbuffers_build_table(flatbuffers_, PBS_ifl_Req, 4)

#define __PBS_ifl_Header_formal_args , PBS_ifl_ProtType_enum_t v0, int16_t v1, flatbuffers_string_ref_t v2
#define __PBS_ifl_Header_call_args , v0, v1, v2
static inline PBS_ifl_Header_ref_t PBS_ifl_Header_create(flatbuffers_builder_t *B __PBS_ifl_Header_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, PBS_ifl_Header, PBS_ifl_Header_file_identifier, PBS_ifl_Header_type_identifier)

#define __PBS_ifl_Attribute_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, flatbuffers_string_ref_t v2, PBS_ifl_batch_op_enum_t v3
#define __PBS_ifl_Attribute_call_args , v0, v1, v2, v3
static inline PBS_ifl_Attribute_ref_t PBS_ifl_Attribute_create(flatbuffers_builder_t *B __PBS_ifl_Attribute_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, PBS_ifl_Attribute, PBS_ifl_Attribute_file_identifier, PBS_ifl_Attribute_type_identifier)

#define __PBS_ifl_Extend_formal_args , flatbuffers_string_ref_t v0
#define __PBS_ifl_Extend_call_args , v0
static inline PBS_ifl_Extend_ref_t PBS_ifl_Extend_create(flatbuffers_builder_t *B __PBS_ifl_Extend_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, PBS_ifl_Extend, PBS_ifl_Extend_file_identifier, PBS_ifl_Extend_type_identifier)

#define __PBS_ifl_Qjob_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, PBS_ifl_Attribute_vec_ref_t v2
#define __PBS_ifl_Qjob_call_args , v0, v1, v2
static inline PBS_ifl_Qjob_ref_t PBS_ifl_Qjob_create(flatbuffers_builder_t *B __PBS_ifl_Qjob_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, PBS_ifl_Qjob, PBS_ifl_Qjob_file_identifier, PBS_ifl_Qjob_type_identifier)

#define __PBS_ifl_Req_formal_args , PBS_ifl_Header_ref_t v0, PBS_ifl_ReqBody_union_ref_t v2, PBS_ifl_Extend_ref_t v3
#define __PBS_ifl_Req_call_args , v0, v2, v3
static inline PBS_ifl_Req_ref_t PBS_ifl_Req_create(flatbuffers_builder_t *B __PBS_ifl_Req_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, PBS_ifl_Req, PBS_ifl_Req_file_identifier, PBS_ifl_Req_type_identifier)

static inline PBS_ifl_ReqBody_union_ref_t PBS_ifl_ReqBody_as_NONE()
{ PBS_ifl_ReqBody_union_ref_t uref; uref.type = PBS_ifl_ReqBody_NONE; uref.value = 0; return uref; }
static inline PBS_ifl_ReqBody_union_ref_t PBS_ifl_ReqBody_as_Qjob(PBS_ifl_Qjob_ref_t ref)
{ PBS_ifl_ReqBody_union_ref_t uref; uref.type = PBS_ifl_ReqBody_Qjob; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, PBS_ifl_ReqBody)

static PBS_ifl_ReqBody_union_ref_t PBS_ifl_ReqBody_clone(flatbuffers_builder_t *B, PBS_ifl_ReqBody_union_t u)
{
    switch (u.type) {
    case 1: return PBS_ifl_ReqBody_as_Qjob(PBS_ifl_Qjob_clone(B, (PBS_ifl_Qjob_table_t)u.value));
    default: return PBS_ifl_ReqBody_as_NONE();
    }
}

__flatbuffers_build_scalar_field(0, flatbuffers_, PBS_ifl_Header_protType, PBS_ifl_ProtType, PBS_ifl_ProtType_enum_t, 1, 1, INT8_C(0), PBS_ifl_Header)
__flatbuffers_build_scalar_field(1, flatbuffers_, PBS_ifl_Header_batchId, flatbuffers_int16, int16_t, 2, 2, INT16_C(0), PBS_ifl_Header)
__flatbuffers_build_string_field(2, flatbuffers_, PBS_ifl_Header_user, PBS_ifl_Header)

static inline PBS_ifl_Header_ref_t PBS_ifl_Header_create(flatbuffers_builder_t *B __PBS_ifl_Header_formal_args)
{
    if (PBS_ifl_Header_start(B)
        || PBS_ifl_Header_user_add(B, v2)
        || PBS_ifl_Header_batchId_add(B, v1)
        || PBS_ifl_Header_protType_add(B, v0)) {
        return 0;
    }
    return PBS_ifl_Header_end(B);
}

static PBS_ifl_Header_ref_t PBS_ifl_Header_clone(flatbuffers_builder_t *B, PBS_ifl_Header_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (PBS_ifl_Header_start(B)
        || PBS_ifl_Header_user_pick(B, t)
        || PBS_ifl_Header_batchId_pick(B, t)
        || PBS_ifl_Header_protType_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, PBS_ifl_Header_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, PBS_ifl_Attribute_name, PBS_ifl_Attribute)
__flatbuffers_build_string_field(1, flatbuffers_, PBS_ifl_Attribute_resc, PBS_ifl_Attribute)
__flatbuffers_build_string_field(2, flatbuffers_, PBS_ifl_Attribute_value, PBS_ifl_Attribute)
__flatbuffers_build_scalar_field(3, flatbuffers_, PBS_ifl_Attribute_op, PBS_ifl_batch_op, PBS_ifl_batch_op_enum_t, 1, 1, INT8_C(0), PBS_ifl_Attribute)

static inline PBS_ifl_Attribute_ref_t PBS_ifl_Attribute_create(flatbuffers_builder_t *B __PBS_ifl_Attribute_formal_args)
{
    if (PBS_ifl_Attribute_start(B)
        || PBS_ifl_Attribute_name_add(B, v0)
        || PBS_ifl_Attribute_resc_add(B, v1)
        || PBS_ifl_Attribute_value_add(B, v2)
        || PBS_ifl_Attribute_op_add(B, v3)) {
        return 0;
    }
    return PBS_ifl_Attribute_end(B);
}

static PBS_ifl_Attribute_ref_t PBS_ifl_Attribute_clone(flatbuffers_builder_t *B, PBS_ifl_Attribute_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (PBS_ifl_Attribute_start(B)
        || PBS_ifl_Attribute_name_pick(B, t)
        || PBS_ifl_Attribute_resc_pick(B, t)
        || PBS_ifl_Attribute_value_pick(B, t)
        || PBS_ifl_Attribute_op_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, PBS_ifl_Attribute_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, PBS_ifl_Extend_extend, PBS_ifl_Extend)

static inline PBS_ifl_Extend_ref_t PBS_ifl_Extend_create(flatbuffers_builder_t *B __PBS_ifl_Extend_formal_args)
{
    if (PBS_ifl_Extend_start(B)
        || PBS_ifl_Extend_extend_add(B, v0)) {
        return 0;
    }
    return PBS_ifl_Extend_end(B);
}

static PBS_ifl_Extend_ref_t PBS_ifl_Extend_clone(flatbuffers_builder_t *B, PBS_ifl_Extend_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (PBS_ifl_Extend_start(B)
        || PBS_ifl_Extend_extend_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, PBS_ifl_Extend_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, PBS_ifl_Qjob_jobId, PBS_ifl_Qjob)
__flatbuffers_build_string_field(1, flatbuffers_, PBS_ifl_Qjob_destin, PBS_ifl_Qjob)
__flatbuffers_build_table_vector_field(2, flatbuffers_, PBS_ifl_Qjob_attrs, PBS_ifl_Attribute, PBS_ifl_Qjob)

static inline PBS_ifl_Qjob_ref_t PBS_ifl_Qjob_create(flatbuffers_builder_t *B __PBS_ifl_Qjob_formal_args)
{
    if (PBS_ifl_Qjob_start(B)
        || PBS_ifl_Qjob_jobId_add(B, v0)
        || PBS_ifl_Qjob_destin_add(B, v1)
        || PBS_ifl_Qjob_attrs_add(B, v2)) {
        return 0;
    }
    return PBS_ifl_Qjob_end(B);
}

static PBS_ifl_Qjob_ref_t PBS_ifl_Qjob_clone(flatbuffers_builder_t *B, PBS_ifl_Qjob_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (PBS_ifl_Qjob_start(B)
        || PBS_ifl_Qjob_jobId_pick(B, t)
        || PBS_ifl_Qjob_destin_pick(B, t)
        || PBS_ifl_Qjob_attrs_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, PBS_ifl_Qjob_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, PBS_ifl_Req_hdr, PBS_ifl_Header, PBS_ifl_Req)
__flatbuffers_build_union_field(2, flatbuffers_, PBS_ifl_Req_body, PBS_ifl_ReqBody, PBS_ifl_Req)
__flatbuffers_build_union_table_value_field(flatbuffers_, PBS_ifl_Req_body, PBS_ifl_ReqBody, Qjob, PBS_ifl_Qjob)
__flatbuffers_build_table_field(3, flatbuffers_, PBS_ifl_Req_extend, PBS_ifl_Extend, PBS_ifl_Req)

static inline PBS_ifl_Req_ref_t PBS_ifl_Req_create(flatbuffers_builder_t *B __PBS_ifl_Req_formal_args)
{
    if (PBS_ifl_Req_start(B)
        || PBS_ifl_Req_hdr_add(B, v0)
        || PBS_ifl_Req_body_add_value(B, v2)
        || PBS_ifl_Req_extend_add(B, v3)
        || PBS_ifl_Req_body_add_type(B, v2.type)) {
        return 0;
    }
    return PBS_ifl_Req_end(B);
}

static PBS_ifl_Req_ref_t PBS_ifl_Req_clone(flatbuffers_builder_t *B, PBS_ifl_Req_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (PBS_ifl_Req_start(B)
        || PBS_ifl_Req_hdr_pick(B, t)
        || PBS_ifl_Req_body_pick(B, t)
        || PBS_ifl_Req_extend_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, PBS_ifl_Req_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* PBS_IFL_BUILDER_H */

#ifndef PBS_IFL_READER_H
#define PBS_IFL_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct PBS_ifl_Header_table *PBS_ifl_Header_table_t;
typedef struct PBS_ifl_Header_table *PBS_ifl_Header_mutable_table_t;
typedef const flatbuffers_uoffset_t *PBS_ifl_Header_vec_t;
typedef flatbuffers_uoffset_t *PBS_ifl_Header_mutable_vec_t;
typedef const struct PBS_ifl_Attribute_table *PBS_ifl_Attribute_table_t;
typedef struct PBS_ifl_Attribute_table *PBS_ifl_Attribute_mutable_table_t;
typedef const flatbuffers_uoffset_t *PBS_ifl_Attribute_vec_t;
typedef flatbuffers_uoffset_t *PBS_ifl_Attribute_mutable_vec_t;
typedef const struct PBS_ifl_Extend_table *PBS_ifl_Extend_table_t;
typedef struct PBS_ifl_Extend_table *PBS_ifl_Extend_mutable_table_t;
typedef const flatbuffers_uoffset_t *PBS_ifl_Extend_vec_t;
typedef flatbuffers_uoffset_t *PBS_ifl_Extend_mutable_vec_t;
typedef const struct PBS_ifl_Qjob_table *PBS_ifl_Qjob_table_t;
typedef struct PBS_ifl_Qjob_table *PBS_ifl_Qjob_mutable_table_t;
typedef const flatbuffers_uoffset_t *PBS_ifl_Qjob_vec_t;
typedef flatbuffers_uoffset_t *PBS_ifl_Qjob_mutable_vec_t;
typedef const struct PBS_ifl_Req_table *PBS_ifl_Req_table_t;
typedef struct PBS_ifl_Req_table *PBS_ifl_Req_mutable_table_t;
typedef const flatbuffers_uoffset_t *PBS_ifl_Req_vec_t;
typedef flatbuffers_uoffset_t *PBS_ifl_Req_mutable_vec_t;
#ifndef PBS_ifl_Header_file_identifier
#define PBS_ifl_Header_file_identifier flatbuffers_identifier
#endif
/* deprecated, use PBS_ifl_Header_file_identifier */
#ifndef PBS_ifl_Header_identifier
#define PBS_ifl_Header_identifier flatbuffers_identifier
#endif
#define PBS_ifl_Header_type_hash ((flatbuffers_thash_t)0x41d7cb9a)
#define PBS_ifl_Header_type_identifier "\x9a\xcb\xd7\x41"
#ifndef PBS_ifl_Attribute_file_identifier
#define PBS_ifl_Attribute_file_identifier flatbuffers_identifier
#endif
/* deprecated, use PBS_ifl_Attribute_file_identifier */
#ifndef PBS_ifl_Attribute_identifier
#define PBS_ifl_Attribute_identifier flatbuffers_identifier
#endif
#define PBS_ifl_Attribute_type_hash ((flatbuffers_thash_t)0x794a60c1)
#define PBS_ifl_Attribute_type_identifier "\xc1\x60\x4a\x79"
#ifndef PBS_ifl_Extend_file_identifier
#define PBS_ifl_Extend_file_identifier flatbuffers_identifier
#endif
/* deprecated, use PBS_ifl_Extend_file_identifier */
#ifndef PBS_ifl_Extend_identifier
#define PBS_ifl_Extend_identifier flatbuffers_identifier
#endif
#define PBS_ifl_Extend_type_hash ((flatbuffers_thash_t)0x16e7db13)
#define PBS_ifl_Extend_type_identifier "\x13\xdb\xe7\x16"
#ifndef PBS_ifl_Qjob_file_identifier
#define PBS_ifl_Qjob_file_identifier flatbuffers_identifier
#endif
/* deprecated, use PBS_ifl_Qjob_file_identifier */
#ifndef PBS_ifl_Qjob_identifier
#define PBS_ifl_Qjob_identifier flatbuffers_identifier
#endif
#define PBS_ifl_Qjob_type_hash ((flatbuffers_thash_t)0x59286611)
#define PBS_ifl_Qjob_type_identifier "\x11\x66\x28\x59"
#ifndef PBS_ifl_Req_file_identifier
#define PBS_ifl_Req_file_identifier flatbuffers_identifier
#endif
/* deprecated, use PBS_ifl_Req_file_identifier */
#ifndef PBS_ifl_Req_identifier
#define PBS_ifl_Req_identifier flatbuffers_identifier
#endif
#define PBS_ifl_Req_type_hash ((flatbuffers_thash_t)0xf7279861)
#define PBS_ifl_Req_type_identifier "\x61\x98\x27\xf7"

typedef int8_t PBS_ifl_ProtType_enum_t;
__flatbuffers_define_integer_type(PBS_ifl_ProtType, PBS_ifl_ProtType_enum_t, 8)
#define PBS_ifl_ProtType_Batch ((PBS_ifl_ProtType_enum_t)INT8_C(0))
#define PBS_ifl_ProtType_TaskManager ((PBS_ifl_ProtType_enum_t)INT8_C(1))

static inline const char *PBS_ifl_ProtType_name(PBS_ifl_ProtType_enum_t value)
{
    switch (value) {
    case PBS_ifl_ProtType_Batch: return "Batch";
    case PBS_ifl_ProtType_TaskManager: return "TaskManager";
    default: return "";
    }
}

static inline int PBS_ifl_ProtType_is_known_value(PBS_ifl_ProtType_enum_t value)
{
    switch (value) {
    case PBS_ifl_ProtType_Batch: return 1;
    case PBS_ifl_ProtType_TaskManager: return 1;
    default: return 0;
    }
}

typedef int8_t PBS_ifl_batch_op_enum_t;
__flatbuffers_define_integer_type(PBS_ifl_batch_op, PBS_ifl_batch_op_enum_t, 8)
#define PBS_ifl_batch_op_SET ((PBS_ifl_batch_op_enum_t)INT8_C(0))
#define PBS_ifl_batch_op_UNSET ((PBS_ifl_batch_op_enum_t)INT8_C(1))
#define PBS_ifl_batch_op_INCR ((PBS_ifl_batch_op_enum_t)INT8_C(2))
#define PBS_ifl_batch_op_DECR ((PBS_ifl_batch_op_enum_t)INT8_C(3))
#define PBS_ifl_batch_op_EQ ((PBS_ifl_batch_op_enum_t)INT8_C(4))
#define PBS_ifl_batch_op_NE ((PBS_ifl_batch_op_enum_t)INT8_C(5))
#define PBS_ifl_batch_op_GE ((PBS_ifl_batch_op_enum_t)INT8_C(6))
#define PBS_ifl_batch_op_GT ((PBS_ifl_batch_op_enum_t)INT8_C(7))
#define PBS_ifl_batch_op_LE ((PBS_ifl_batch_op_enum_t)INT8_C(8))
#define PBS_ifl_batch_op_LT ((PBS_ifl_batch_op_enum_t)INT8_C(9))
#define PBS_ifl_batch_op_DFLT ((PBS_ifl_batch_op_enum_t)INT8_C(10))

static inline const char *PBS_ifl_batch_op_name(PBS_ifl_batch_op_enum_t value)
{
    switch (value) {
    case PBS_ifl_batch_op_SET: return "SET";
    case PBS_ifl_batch_op_UNSET: return "UNSET";
    case PBS_ifl_batch_op_INCR: return "INCR";
    case PBS_ifl_batch_op_DECR: return "DECR";
    case PBS_ifl_batch_op_EQ: return "EQ";
    case PBS_ifl_batch_op_NE: return "NE";
    case PBS_ifl_batch_op_GE: return "GE";
    case PBS_ifl_batch_op_GT: return "GT";
    case PBS_ifl_batch_op_LE: return "LE";
    case PBS_ifl_batch_op_LT: return "LT";
    case PBS_ifl_batch_op_DFLT: return "DFLT";
    default: return "";
    }
}

static inline int PBS_ifl_batch_op_is_known_value(PBS_ifl_batch_op_enum_t value)
{
    switch (value) {
    case PBS_ifl_batch_op_SET: return 1;
    case PBS_ifl_batch_op_UNSET: return 1;
    case PBS_ifl_batch_op_INCR: return 1;
    case PBS_ifl_batch_op_DECR: return 1;
    case PBS_ifl_batch_op_EQ: return 1;
    case PBS_ifl_batch_op_NE: return 1;
    case PBS_ifl_batch_op_GE: return 1;
    case PBS_ifl_batch_op_GT: return 1;
    case PBS_ifl_batch_op_LE: return 1;
    case PBS_ifl_batch_op_LT: return 1;
    case PBS_ifl_batch_op_DFLT: return 1;
    default: return 0;
    }
}



struct PBS_ifl_Header_table { uint8_t unused__; };

static inline size_t PBS_ifl_Header_vec_len(PBS_ifl_Header_vec_t vec)
__flatbuffers_vec_len(vec)
static inline PBS_ifl_Header_table_t PBS_ifl_Header_vec_at(PBS_ifl_Header_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(PBS_ifl_Header_table_t, vec, i, 0)
__flatbuffers_table_as_root(PBS_ifl_Header)

__flatbuffers_define_scalar_field(0, PBS_ifl_Header, protType, PBS_ifl_ProtType, PBS_ifl_ProtType_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(1, PBS_ifl_Header, batchId, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_string_field(2, PBS_ifl_Header, user, 0)

struct PBS_ifl_Attribute_table { uint8_t unused__; };

static inline size_t PBS_ifl_Attribute_vec_len(PBS_ifl_Attribute_vec_t vec)
__flatbuffers_vec_len(vec)
static inline PBS_ifl_Attribute_table_t PBS_ifl_Attribute_vec_at(PBS_ifl_Attribute_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(PBS_ifl_Attribute_table_t, vec, i, 0)
__flatbuffers_table_as_root(PBS_ifl_Attribute)

__flatbuffers_define_string_field(0, PBS_ifl_Attribute, name, 0)
__flatbuffers_define_string_field(1, PBS_ifl_Attribute, resc, 0)
__flatbuffers_define_string_field(2, PBS_ifl_Attribute, value, 0)
__flatbuffers_define_scalar_field(3, PBS_ifl_Attribute, op, PBS_ifl_batch_op, PBS_ifl_batch_op_enum_t, INT8_C(0))

struct PBS_ifl_Extend_table { uint8_t unused__; };

static inline size_t PBS_ifl_Extend_vec_len(PBS_ifl_Extend_vec_t vec)
__flatbuffers_vec_len(vec)
static inline PBS_ifl_Extend_table_t PBS_ifl_Extend_vec_at(PBS_ifl_Extend_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(PBS_ifl_Extend_table_t, vec, i, 0)
__flatbuffers_table_as_root(PBS_ifl_Extend)

__flatbuffers_define_string_field(0, PBS_ifl_Extend, extend, 0)

struct PBS_ifl_Qjob_table { uint8_t unused__; };

static inline size_t PBS_ifl_Qjob_vec_len(PBS_ifl_Qjob_vec_t vec)
__flatbuffers_vec_len(vec)
static inline PBS_ifl_Qjob_table_t PBS_ifl_Qjob_vec_at(PBS_ifl_Qjob_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(PBS_ifl_Qjob_table_t, vec, i, 0)
__flatbuffers_table_as_root(PBS_ifl_Qjob)

__flatbuffers_define_string_field(0, PBS_ifl_Qjob, jobId, 0)
__flatbuffers_define_string_field(1, PBS_ifl_Qjob, destin, 0)
__flatbuffers_define_vector_field(2, PBS_ifl_Qjob, attrs, PBS_ifl_Attribute_vec_t, 0)
typedef uint8_t PBS_ifl_ReqBody_union_type_t;
__flatbuffers_define_integer_type(PBS_ifl_ReqBody, PBS_ifl_ReqBody_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, PBS_ifl_ReqBody)
#define PBS_ifl_ReqBody_NONE ((PBS_ifl_ReqBody_union_type_t)UINT8_C(0))
#define PBS_ifl_ReqBody_Qjob ((PBS_ifl_ReqBody_union_type_t)UINT8_C(1))

static inline const char *PBS_ifl_ReqBody_type_name(PBS_ifl_ReqBody_union_type_t type)
{
    switch (type) {
    case PBS_ifl_ReqBody_NONE: return "NONE";
    case PBS_ifl_ReqBody_Qjob: return "Qjob";
    default: return "";
    }
}

static inline int PBS_ifl_ReqBody_is_known_type(PBS_ifl_ReqBody_union_type_t type)
{
    switch (type) {
    case PBS_ifl_ReqBody_NONE: return 1;
    case PBS_ifl_ReqBody_Qjob: return 1;
    default: return 0;
    }
}


struct PBS_ifl_Req_table { uint8_t unused__; };

static inline size_t PBS_ifl_Req_vec_len(PBS_ifl_Req_vec_t vec)
__flatbuffers_vec_len(vec)
static inline PBS_ifl_Req_table_t PBS_ifl_Req_vec_at(PBS_ifl_Req_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(PBS_ifl_Req_table_t, vec, i, 0)
__flatbuffers_table_as_root(PBS_ifl_Req)

__flatbuffers_define_table_field(0, PBS_ifl_Req, hdr, PBS_ifl_Header_table_t, 0)
__flatbuffers_define_union_field(flatbuffers_, 2, PBS_ifl_Req, body, PBS_ifl_ReqBody, 0)
__flatbuffers_define_table_field(3, PBS_ifl_Req, extend, PBS_ifl_Extend_table_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* PBS_IFL_READER_H */
